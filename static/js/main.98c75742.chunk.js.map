{"version":3,"sources":["images sync /^/.//.*$","images/aashirvad.jpg","images/akiva.jpg","images/amrutam.jpg","images/amul.jpg","images/fresh.jpg","images/mothersDairy.jpg","images/nandini.jpg","images/nestle.jpg","images/patanjali.jpg","images/srisri.jpg","components/Header.js","components/Modal.js","components/Footer.js","components/Product.js","components/Products.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Header","className","Modal","props","useState","buyOptionClicked","setBuyPotionClicked","onClick","setOpenModal","Date","toLocaleDateString","price","cart","item","index","key","name","style","display","margin","removeFromCart","quantity","addToCart","width","backgroundColor","setCart","setClearCartClicked","setTimeout","Footer","qty","setQty","setPrice","openModal","useEffect","length","totalQty","totalPrice","product","Number","type","Product","count","setCount","add","clearCartClicked","src","require","imgUrl","alt","OfferText","brandName","productName","mrp","remove","Products","productData","Container","found","updatedCart","cartItem","push","filteredCart","filter","paddingBottom","App","setProductData","error","setError","fetch","then","response","json","data","catch","err","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOAAA,IAAIA,EAAM,CACT,kBAAmB,GACnB,cAAe,GACf,gBAAiB,GACjB,aAAc,GACd,cAAe,GACf,qBAAsB,GACtB,gBAAiB,GACjB,eAAgB,GAChB,kBAAmB,GACnB,eAAgB,IAIjB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBC/BpBU,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,qGCW5BC,G,KATA,WACb,OACE,yBAAKC,UAAU,WAAf,qBAEE,uBAAGA,UAAU,mCAAb,iBAAiE,OC+JxDC,G,MAnKD,SAAAC,GAAU,IAAD,EAC2BC,oBAAS,GADpC,mBACdC,EADc,KACIC,EADJ,KAgKrB,OAAO,oCAAGD,EAlJN,yBAAKJ,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cAAf,mCAEE,0BACEA,UAAU,cACVM,QAAS,kBAAMJ,EAAMK,cAAa,KAEjC,IAJH,IAKI,MAGN,yBAAKP,UAAU,gBACb,yBAAKA,UAAU,cAAf,8BAC6B,6BAD7B,wBAC4D,KACzD,IAAIQ,MAAOC,sBAGd,yBAAKT,UAAU,eACb,4BACEA,UAAU,WACVM,QAAS,kBAAMJ,EAAMK,cAAa,KAFpC,aAeR,yBAAKP,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,0EAEA,0BACEA,UAAU,cACVM,QAAS,kBAAMJ,EAAMK,cAAa,KAEjC,IAJH,IAKI,MAGLL,EAAMQ,OAAyB,IAAhBR,EAAMQ,MACpB,yBAAKV,UAAU,gBACZI,EACC,oCACE,yBAAKJ,UAAU,cAAf,8BAC6B,6BAD7B,wBAC4D,KACzD,IAAIQ,MAAOC,uBAIhBP,EAAMS,KAAK3B,KAAI,SAAC4B,EAAMC,GAAP,OACb,yBAAKb,UAAU,kBAAkBc,IAAKD,GACnCD,EAAKG,KADR,WAGE,6BAHF,OAIS,IACP,0BACEC,MAAO,CAAEC,QAAS,eAAgBC,OAAQ,YAE1C,uBACElB,UAAU,uBACVM,QAAS,WACPJ,EAAMiB,eAAeP,KAGtB,IANH,UAHF,WAaGA,EAAKQ,SAbR,WAeE,uBACEpB,UAAU,sBACVM,QAAS,WACPJ,EAAMmB,UAAUT,KAGjB,IANH,OAfF,qBAwB0BA,EAAKF,MAxB/B,YAwBgD,IAC7CE,EAAKQ,SAAWR,EAAKF,OA9B1B,WAiCE,wBACEM,MAAO,CAAEM,MAAO,MAAOC,gBAAiB,mBAMhD,yBAAKvB,UAAU,eAAf,wBACwB,gCAASE,EAAMQ,QAGvC,yBAAKV,UAAU,eACb,4BACEA,UAAU,WACVM,QAAS,WACPJ,EAAMsB,QAAQ,IACdtB,EAAMK,cAAa,GACnBL,EAAMuB,qBAAoB,GAC1BC,YAAW,WACTxB,EAAMuB,qBAAoB,KACzB,OARP,cAYU,IAbZ,WAeE,4BAAQzB,UAAU,aAAaM,QAAS,kBA/HpDD,GAAoB,GACpBH,EAAMsB,QAAQ,IACdtB,EAAMuB,qBAAoB,QAC1BC,YAAW,WACTxB,EAAMuB,qBAAoB,KACzB,OA0HS,WAEU,IAjBZ,WAmBE,4BACEzB,UAAU,WACVM,QAAS,kBAAMJ,EAAMK,cAAa,KAFpC,WASJ,yBAAKP,UAAU,gBACb,yBAAKA,UAAU,cAAf,2BACA,yBAAKA,UAAU,eACb,4BACEA,UAAU,WACVM,QAAS,kBAAMJ,EAAMK,cAAa,KAFpC,gBC1FDoB,EAxDA,SAAAzB,GAAU,IAAD,EACAC,mBAAS,MADT,mBACfyB,EADe,KACVC,EADU,OAEI1B,mBAAS,MAFb,mBAEfO,EAFe,KAERoB,EAFQ,OAGY3B,oBAAS,GAHrB,mBAGf4B,EAHe,KAGJxB,EAHI,KAoBtB,OAfAyB,qBAAU,WACR,GAAI9B,EAAMS,MAAQT,EAAMS,KAAKsB,QAAU,EAAG,CACxC,IAAIC,EAAW,EACXC,EAAa,EAFuB,uBAGxC,YAAoBjC,EAAMS,KAA1B,+CAAgC,CAAC,IAAxByB,EAAuB,QAE9BF,EAAWG,OAAOH,GAAYG,OAAOD,EAAQhB,UAC7Ce,GACeE,OAAOD,EAAQhB,UAAYiB,OAAOD,EAAQ1B,QAPnB,kFASxCmB,EAAOK,GACPJ,EAASK,MAEV,CAACjC,EAAMS,OAGR,yBAAKX,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,MAAf,SAA2B4B,GAC3B,6BACA,yBAAK5B,UAAU,MAAf,WAA6BU,IAE/B,yBAAKV,UAAU,SACb,4BACEsC,KAAK,SACLtC,UAAU,SACVM,QAAS,kBAAMC,GAAa,KAH9B,cAWHwB,EACC,kBAAC,EAAD,CACEpB,KAAMT,EAAMS,KACZD,MAAOA,EACPkB,IAAKA,EACLrB,aAAcA,EACdc,UAAWnB,EAAMmB,UACjBF,eAAgBjB,EAAMiB,eACtBK,QAAStB,EAAMsB,QACfC,oBAAqBvB,EAAMuB,sBAE3B,OCwDKc,G,MA3GC,SAAArC,GAAU,IAChBmB,EAA8CnB,EAA9CmB,UAAWF,EAAmCjB,EAAnCiB,eAAgBiB,EAAmBlC,EAAnBkC,QAASvB,EAAUX,EAAVW,MADrB,EAEGV,mBAAS,GAFZ,mBAEhBqC,EAFgB,KAETC,EAFS,KAGjBC,EAAM,SAAAN,GACVK,EAASD,EAAQ,GACjBnB,EAAUe,IAgBZ,OANAJ,qBAAU,WACJ9B,EAAMyC,kBACRF,EAAS,KAEV,CAACvC,EAAMyC,mBAGR,yBAAK3C,UAAU,oBAAoBc,IAAKD,GACtC,yBAAKb,UAAU,gBACb,yBACE4C,IAAKC,MAAQ,YAAaT,EAAQU,SAClC9C,UAAU,eACV+C,IAAKX,EAAQU,SAEf,6BACA,6BAEA,6BAAMV,EAAQY,YAGhB,yBAAKhD,UAAU,iBACb,yBAAKA,UAAU,gBACb,gCAASoC,EAAQa,YAEnB,yBAAKjD,UAAU,kBACZoC,EAAQc,YACT,6BACCd,EAAQhB,SACT,6BAJF,OAKOgB,EAAQe,IACb,6BACA,sCAAYf,EAAQ1B,QAGtB,yBAAKV,UAAU,gBACb,yBAAKA,UAAU,gBACb,4BACEA,UAAU,eACVM,QAAS,WACPoC,EAAIN,KAHR,gBASF,yBAAKpC,UAAU,0BACb,uBACEA,UAAU,wBACVM,QAAS,YAvDN,SAAA8B,GACTI,GAAS,GACXC,EAASD,EAAQ,GAEnBrB,EAAeiB,GAoDHgB,CAAOhB,KAHX,UADF,WAUE,0BAAMpC,UAAU,SAASwC,GAV3B,WAYE,uBACExC,UAAU,qBACVM,QAAS,WACPoC,EAAIN,KAHR,aCtDGiB,EAnBE,SAAAnD,GACf,OACE,oCACGA,EAAMoD,aACLpD,EAAMoD,YAAYtE,KAAI,SAACoD,EAASvB,GAAV,OACpB,kBAAC,EAAD,CACEC,IAAKD,EACLuB,QAASA,EACTvB,MAAOA,EACPQ,UAAWnB,EAAMmB,UACjBF,eAAgBjB,EAAMiB,eACtBR,KAAMT,EAAMS,KACZgC,iBAAkBzC,EAAMyC,wBC+DrBY,EAvEG,SAAArD,GAAU,IAAD,EACDC,mBAAS,IADR,mBAClBQ,EADkB,KACZa,EADY,OAEuBrB,oBAAS,GAFhC,mBAElBwC,EAFkB,KAEAlB,EAFA,KAInBJ,EAAY,SAAAT,GAChB,IAAI4C,GAAQ,EACRC,EAAc9C,EAAK3B,KAAI,SAAA0E,GACzB,OAAIA,EAASvE,KAAOyB,EAAKzB,IACvBqE,GAAQ,EACRE,EAAStC,WACFsC,GAEAA,KAINF,GACHC,EAAYE,KAAK,CACfxE,GAAIyB,EAAKzB,GACT4B,KAAMH,EAAKsC,YACXxC,MAAOE,EAAKF,MACZU,SAAU,IAIdI,EAAQiC,IAGJtC,EAAiB,SAAAP,GACrB,IAUIgD,EAVcjD,EAAK3B,KAAI,SAAC0E,EAAU7C,GACpC,OAAI6C,EAASvE,KAAOyB,EAAKzB,IACnBuE,EAAStC,UAAY,GACvBsC,EAAStC,WAEJsC,GAEAA,KAGoBG,QAAO,SAASjD,GAC7C,OAAOA,EAAKQ,SAAW,KAEzBI,EAAQ,YAAIoC,KAEd,OACE,yBAAK5D,UAAU,aACb,6BACE,kBAAC,EAAD,OAEF,yBAAKgB,MAAO,CAAE8C,cAAe,UAC3B,kBAAC,EAAD,CACER,YAAapD,EAAMoD,YACnBjC,UAAWA,EACXF,eAAgBA,EAChBR,KAAMA,EACNgC,iBAAkBA,KAGtB,yBAAK3B,MAAO,CAAEM,MAAO,SACnB,kBAAC,EAAD,CACEX,KAAMA,EACNU,UAAWA,EACXF,eAAgBA,EAChBK,QAASA,EACTC,oBAAqBA,OCpChBsC,MA9Bf,WAAgB,IAAD,EACyB5D,mBAAS,MADlC,mBACNmD,EADM,KACOU,EADP,OAEa7D,mBAAS,MAFtB,mBAEN8D,EAFM,KAECC,EAFD,KAmBb,OAfAlC,qBAAU,WACRmC,MAAM,aACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAEJP,EAAeO,EAAKjB,gBAGrBkB,OAAM,SAAAC,GACLP,EAAS,iCAEZ,IAGD,yBAAKlE,UAAU,OACZiE,EACC,0DAEA,kBAAC,EAAD,CAAWX,YAAaA,MChBZoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjB,MAAK,SAAAkB,GACjCA,EAAaC,kB","file":"static/js/main.98c75742.chunk.js","sourcesContent":["var map = {\n\t\"./aashirvad.jpg\": 16,\n\t\"./akiva.jpg\": 17,\n\t\"./amrutam.jpg\": 18,\n\t\"./amul.jpg\": 19,\n\t\"./fresh.jpg\": 20,\n\t\"./mothersDairy.jpg\": 21,\n\t\"./nandini.jpg\": 22,\n\t\"./nestle.jpg\": 23,\n\t\"./patanjali.jpg\": 24,\n\t\"./srisri.jpg\": 25\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","module.exports = __webpack_public_path__ + \"static/media/aashirvad.f0f57bf2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/akiva.e0f7a96c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amrutam.2de1a6c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amul.1766a06b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fresh.7c36da2a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mothersDairy.9f7390ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nandini.0e6174dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nestle.88d0cd7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/patanjali.734434f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/srisri.3a2abf39.jpg\";","import React from \"react\";\nimport \"../css/headerAndFooter.css\";\nconst Header = () => {\n  return (\n    <div className=\"header \">\n      Shopping Cart &nbsp;\n      <i className=\"material-icons shoppingCartIcon\">shopping_cart</i>{\" \"}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"../css/Modal.css\";\nconst Modal = props => {\n  const [buyOptionClicked, setBuyPotionClicked] = useState(false);\n\n  const handleBuyNow = () => {\n    setBuyPotionClicked(true);\n    props.setCart([]);\n    props.setClearCartClicked(true);\n    setTimeout(() => {\n      props.setClearCartClicked(false);\n    }, 2000);\n  };\n\n  const getOrderSuccess = () => {\n    return (\n      <div className=\"modalContainer\">\n        <div className=\"modalWindow\">\n          <div className=\"modlaTilte\">\n            &nbsp;&nbsp;&nbsp;Order is successfull\n            <span\n              className=\"closeButton\"\n              onClick={() => props.setOpenModal(false)}\n            >\n              {\" \"}\n              X{\" \"}\n            </span>\n          </div>\n          <div className=\"modalContent\">\n            <div className=\"noItemsMsg\">\n              Your Order is successfull .<br></br> Will be delivered by{\" \"}\n              {new Date().toLocaleDateString()}\n            </div>\n\n            <div className=\"modalFooter\">\n              <button\n                className=\"closeBtn\"\n                onClick={() => props.setOpenModal(false)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const getOrderDetails = () => {\n    return (\n      <div className=\"modalContainer\">\n        <div className=\"modalWindow\">\n          <div className=\"modlaTilte\">\n            <>&nbsp;&nbsp;&nbsp;Check out Confirmation</>\n\n            <span\n              className=\"closeButton\"\n              onClick={() => props.setOpenModal(false)}\n            >\n              {\" \"}\n              X{\" \"}\n            </span>\n          </div>\n          {props.price && props.price !== 0 ? (\n            <div className=\"modalContent\">\n              {buyOptionClicked ? (\n                <>\n                  <div className=\"noItemsMsg\">\n                    Your Order is successfull .<br></br> Will be delivered by{\" \"}\n                    {new Date().toLocaleDateString()}\n                  </div>\n                </>\n              ) : (\n                props.cart.map((item, index) => (\n                  <div className=\"itemDescription\" key={index}>\n                    {item.name}\n                    &nbsp;&nbsp;\n                    <br></br>\n                    &nbsp;{\" \"}\n                    <span\n                      style={{ display: \"inline-block\", margin: \"8px 0px\" }}\n                    >\n                      <i\n                        className=\"material-icons minus\"\n                        onClick={() => {\n                          props.removeFromCart(item);\n                        }}\n                      >\n                        {\" \"}\n                        remove\n                      </i>\n                      &nbsp;&nbsp;\n                      {item.quantity}\n                      &nbsp;&nbsp;\n                      <i\n                        className=\"material-icons plus\"\n                        onClick={() => {\n                          props.addToCart(item);\n                        }}\n                      >\n                        {\" \"}\n                        add\n                      </i>\n                      &nbsp;&nbsp; x &#8377; {item.price} = &#8377;{\" \"}\n                      {item.quantity * item.price}\n                    </span>\n                    &nbsp;&nbsp;\n                    <hr\n                      style={{ width: \"98%\", backgroundColor: \"lightgrey\" }}\n                    />\n                  </div>\n                ))\n              )}\n\n              <div className=\"totalAmount\">\n                Total Price : &#8377; <strong>{props.price}</strong>\n              </div>\n\n              <div className=\"modalFooter\">\n                <button\n                  className=\"clearBtn\"\n                  onClick={() => {\n                    props.setCart([]);\n                    props.setOpenModal(false);\n                    props.setClearCartClicked(true);\n                    setTimeout(() => {\n                      props.setClearCartClicked(false);\n                    }, 1000);\n                  }}\n                >\n                  Clear Cart\n                </button>{\" \"}\n                &nbsp;&nbsp;\n                <button className=\"successBtn\" onClick={() => handleBuyNow()}>\n                  Buy Now\n                </button>{\" \"}\n                &nbsp;&nbsp;\n                <button\n                  className=\"closeBtn\"\n                  onClick={() => props.setOpenModal(false)}\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"modalContent\">\n              <div className=\"noItemsMsg\">No items added to cart.</div>\n              <div className=\"modalFooter\">\n                <button\n                  className=\"closeBtn\"\n                  onClick={() => props.setOpenModal(false)}\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n  return <>{buyOptionClicked ? getOrderSuccess() : getOrderDetails()}</>;\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/headerAndFooter.css\";\nimport Modal from \"./Modal\";\nconst Footer = props => {\n  const [qty, setQty] = useState(null);\n  const [price, setPrice] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    if (props.cart && props.cart.length >= 0) {\n      let totalQty = 0;\n      let totalPrice = 0;\n      for (let product of props.cart) {\n        // console.log(\"FFF\", product);\n        totalQty = Number(totalQty) + Number(product.quantity);\n        totalPrice =\n          totalPrice + Number(product.quantity) * Number(product.price);\n      }\n      setQty(totalQty);\n      setPrice(totalPrice);\n    }\n  }, [props.cart]);\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footerInnerDiv\">\n        <div className=\"left\">\n          <div className=\"h4\">Qty : {qty}</div>\n          <br></br>\n          <div className=\"h4\">Total : {price}</div>\n        </div>\n        <div className=\"right\">\n          <button\n            type=\"submit\"\n            className=\"button\"\n            onClick={() => setOpenModal(true)}\n            // disabled={!props.cart.length >= 1}\n          >\n            CHECKOUT\n          </button>\n        </div>\n      </div>\n\n      {openModal ? (\n        <Modal\n          cart={props.cart}\n          price={price}\n          qty={qty}\n          setOpenModal={setOpenModal}\n          addToCart={props.addToCart}\n          removeFromCart={props.removeFromCart}\n          setCart={props.setCart}\n          setClearCartClicked={props.setClearCartClicked}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/products.css\";\n\nconst Product = props => {\n  const { addToCart, removeFromCart, product, index } = props;\n  const [count, setCount] = useState(0);\n  const add = product => {\n    setCount(count + 1);\n    addToCart(product);\n  };\n\n  const remove = product => {\n    if (count >= 1) {\n      setCount(count - 1);\n    }\n    removeFromCart(product);\n  };\n\n  useEffect(() => {\n    if (props.clearCartClicked) {\n      setCount(0);\n    }\n  }, [props.clearCartClicked]);\n\n  return (\n    <div className=\"productsContainer\" key={index}>\n      <div className=\"productsLeft\">\n        <img\n          src={require(`../images/${product.imgUrl}`)}\n          className=\"productImage\"\n          alt={product.imgUrl}\n        />\n        <br></br>\n        <br></br>\n\n        <div>{product.OfferText}</div>\n      </div>\n\n      <div className=\"productsRight\">\n        <div className=\"productTitle\">\n          <strong>{product.brandName}</strong>\n        </div>\n        <div className=\"productDetails\">\n          {product.productName}\n          <br></br>\n          {product.quantity}\n          <br></br>\n          MRP {product.mrp}\n          <br></br>\n          <strong>RS {product.price}</strong>\n        </div>\n\n        <div className=\"addingToCart\">\n          <div className=\"addToCartDiv\">\n            <button\n              className=\"addTocartBtn\"\n              onClick={() => {\n                add(product);\n              }}\n            >\n              ADD TO CART\n            </button>\n          </div>\n          <div className=\"incrimentDecerementDiv\">\n            <i\n              className=\"material-icons remove\"\n              onClick={() => {\n                remove(product);\n              }}\n            >\n              remove\n            </i>\n            &nbsp;&nbsp;\n            <span className=\"count\">{count}</span>\n            &nbsp;&nbsp;\n            <i\n              className=\"material-icons add\"\n              onClick={() => {\n                add(product);\n              }}\n            >\n              add\n            </i>\n            {/* <span\n              className=\"roundBorder\"\n              onClick={() => {\n                remove(product);\n              }}\n            >\n              {\" \"}\n              -{\" \"}\n            </span>\n            &nbsp;&nbsp;\n            {count}\n            &nbsp;&nbsp;\n            <span\n              className=\"roundBorder2\"\n              onClick={() => {\n                add(product);\n              }}\n            >\n              +{\" \"}\n            </span> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport Product from \"./Product\";\nconst Products = props => {\n  return (\n    <>\n      {props.productData &&\n        props.productData.map((product, index) => (\n          <Product\n            key={index}\n            product={product}\n            index={index}\n            addToCart={props.addToCart}\n            removeFromCart={props.removeFromCart}\n            cart={props.cart}\n            clearCartClicked={props.clearCartClicked}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default Products;\n","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Products from \"./Products\";\n\nconst Container = props => {\n  const [cart, setCart] = useState([]);\n  const [clearCartClicked, setClearCartClicked] = useState(false);\n\n  const addToCart = item => {\n    let found = false;\n    let updatedCart = cart.map(cartItem => {\n      if (cartItem.id === item.id) {\n        found = true;\n        cartItem.quantity++;\n        return cartItem;\n      } else {\n        return cartItem;\n      }\n    });\n\n    if (!found) {\n      updatedCart.push({\n        id: item.id,\n        name: item.productName,\n        price: item.price,\n        quantity: 1\n      });\n    }\n\n    setCart(updatedCart);\n  };\n\n  const removeFromCart = item => {\n    let updatedCart = cart.map((cartItem, index) => {\n      if (cartItem.id === item.id) {\n        if (cartItem.quantity >= 1) {\n          cartItem.quantity--;\n        }\n        return cartItem;\n      } else {\n        return cartItem;\n      }\n    });\n    let filteredCart = updatedCart.filter(function(item) {\n      return item.quantity > 0;\n    });\n    setCart([...filteredCart]);\n  };\n  return (\n    <div className=\"container\">\n      <div>\n        <Header />\n      </div>\n      <div style={{ paddingBottom: \"120px\" }}>\n        <Products\n          productData={props.productData}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n          cart={cart}\n          clearCartClicked={clearCartClicked}\n        />\n      </div>\n      <div style={{ width: \"100%\" }}>\n        <Footer\n          cart={cart}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n          setCart={setCart}\n          setClearCartClicked={setClearCartClicked}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n  const [productData, setProductData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"data.json\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        // Work with JSON data here\n        setProductData(data.productData);\n      })\n\n      .catch(err => {\n        setError(\"Error While Getting Data\");\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {error ? (\n        <div> Error White Getting Data</div>\n      ) : (\n        <Container productData={productData} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}